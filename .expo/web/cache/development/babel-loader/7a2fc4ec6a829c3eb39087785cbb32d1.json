{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\NODEJS\\\\React Native\\\\Mapa\\\\components\\\\Mapa\\\\Mapa.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport MapView, { Marker } from \"react-native-maps\";\nvar styles = StyleSheet.create({\n  map: {\n    width: \"95%\",\n    height: \"40%\"\n  }\n});\n\nvar Mapa = function (_React$Component) {\n  _inherits(Mapa, _React$Component);\n\n  var _super = _createSuper(Mapa);\n\n  function Mapa(props) {\n    var _this;\n\n    _classCallCheck(this, Mapa);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      Latitud: 39.46975,\n      longitude: -0.37739\n    };\n    return _this;\n  }\n\n  _createClass(Mapa, [{\n    key: \"onRegionChange\",\n    value: function onRegionChange(region) {\n      this.setState({\n        region: region\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var mapStyle = [{\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#F8F5EE\"\n        }]\n      }, {\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#746855\"\n        }]\n      }, {\n        elementType: \"labels.text.stroke\",\n        stylers: [{\n          color: \"#242f3e\"\n        }]\n      }, {\n        featureType: \"administrative.locality\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#bb6f3c\",\n          textShadowColor: \"rgba(0, 0, 0, 0.75)\",\n          textShadowOffset: {\n            width: -1,\n            height: 1\n          },\n          textShadowRadius: 10\n        }]\n      }, {\n        featureType: \"poi\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#2f74c4\"\n        }]\n      }, {\n        featureType: \"poi.park\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#D0E7BE\"\n        }]\n      }, {\n        featureType: \"poi.park\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#181513\"\n        }]\n      }, {\n        featureType: \"road\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#F1D485\"\n        }]\n      }, {\n        featureType: \"road\",\n        elementType: \"geometry.stroke\",\n        stylers: [{\n          color: \"#F1D485\"\n        }]\n      }, {\n        featureType: \"road\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#9ca5b3\"\n        }]\n      }, {\n        featureType: \"road.highway\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#746855\"\n        }]\n      }, {\n        featureType: \"road.highway\",\n        elementType: \"geometry.stroke\",\n        stylers: [{\n          color: \"#F1D485\"\n        }]\n      }, {\n        featureType: \"road.highway\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#F1D485\"\n        }]\n      }, {\n        featureType: \"transit\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#F1D485\"\n        }]\n      }, {\n        featureType: \"transit.station\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#d59563\"\n        }]\n      }, {\n        featureType: \"water\",\n        elementType: \"geometry\",\n        stylers: [{\n          color: \"#B5DDEF\"\n        }]\n      }, {\n        featureType: \"water\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#EEF6E8\"\n        }]\n      }, {\n        featureType: \"water\",\n        elementType: \"labels.text.stroke\",\n        stylers: [{\n          color: \"#EEF6E8\"\n        }]\n      }];\n      var Latitud = this.props.Latitud;\n      var Longitud = this.props.longitude;\n      console.log(\"Datosok:\" + Latitud);\n      return React.createElement(React.Fragment, null, React.createElement(MapView, {\n        style: styles.map,\n        initialRegion: {\n          latitude: Latitud,\n          longitude: Longitud,\n          latitudeDelta: 0.0922,\n          longitudeDelta: 0.0421\n        },\n        customMapStyle: mapStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }, React.createElement(MapView.Marker, {\n        draggable: true,\n        coordinate: {\n          latitude: Latitud,\n          longitude: Longitud\n        },\n        onDragEnd: function onDragEnd(e) {\n          return alert(JSON.stringify(e.nativeEvent.coordinate));\n        },\n        title: \"Yo\",\n        description: \"Tu posici√≥n\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }\n      }, \"Yo\"), React.createElement(Image, {\n        source: require(\"./Usuario.png\"),\n        style: {\n          width: 20,\n          height: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }\n      })), React.createElement(MapView.Marker, {\n        draggable: true,\n        coordinate: {\n          latitude: this.state.Latitud,\n          longitude: this.state.longitude\n        },\n        onDragEnd: function onDragEnd(e) {\n          return alert(JSON.stringify(e.nativeEvent.coordinate));\n        },\n        title: \"Jaime\",\n        description: \"Numero de jaime\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }\n      }, \"Jaime\"), React.createElement(Image, {\n        source: require(\"./Usuario.png\"),\n        style: {\n          width: 20,\n          height: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return Mapa;\n}(React.Component);\n\nexport { Mapa as default };","map":{"version":3,"sources":["E:/NODEJS/React Native/Mapa/components/Mapa/Mapa.js"],"names":["React","MapView","Marker","styles","StyleSheet","create","map","width","height","Mapa","props","state","Latitud","longitude","region","setState","mapStyle","elementType","stylers","color","featureType","textShadowColor","textShadowOffset","textShadowRadius","Longitud","console","log","latitude","latitudeDelta","longitudeDelta","e","alert","JSON","stringify","nativeEvent","coordinate","require","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Text, View, TextInput, Image } from \"react-native\";\r\nimport MapView, { Marker } from \"react-native-maps\";\r\n\r\nconst styles = StyleSheet.create({\r\n  map: {\r\n    width: \"95%\",\r\n    height: \"40%\",\r\n  },\r\n});\r\n\r\nexport default class Mapa extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Latitud: 39.46975,\r\n      longitude: -0.37739,\r\n    };\r\n  }\r\n\r\n  onRegionChange(region) {\r\n    this.setState({ region });\r\n  }\r\n  render() {\r\n    var mapStyle = [\r\n      {\r\n        elementType: \"geometry\",\r\n        //Grosso\r\n        stylers: [{ color: \"#F8F5EE\" }],\r\n      },\r\n      { elementType: \"labels.text.fill\", stylers: [{ color: \"#746855\" }] },\r\n      { elementType: \"labels.text.stroke\", stylers: [{ color: \"#242f3e\" }] },\r\n      {\r\n        featureType: \"administrative.locality\",\r\n        //Nombres\r\n        elementType: \"labels.text.fill\",\r\n        stylers: [\r\n          {\r\n            color: \"#bb6f3c\",\r\n            textShadowColor: \"rgba(0, 0, 0, 0.75)\",\r\n            textShadowOffset: { width: -1, height: 1 },\r\n            textShadowRadius: 10,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        featureType: \"poi\",\r\n        elementType: \"labels.text.fill\",\r\n        stylers: [{ color: \"#2f74c4\" }],\r\n      },\r\n      //Bosque\r\n      {\r\n        featureType: \"poi.park\",\r\n        elementType: \"geometry\",\r\n        stylers: [{ color: \"#D0E7BE\" }],\r\n      },\r\n      {\r\n        featureType: \"poi.park\",\r\n        elementType: \"labels.text.fill\",\r\n        stylers: [{ color: \"#181513\" }],\r\n      },\r\n      //Calles\r\n      {\r\n        featureType: \"road\",\r\n        elementType: \"geometry\",\r\n        stylers: [{ color: \"#F1D485\" }],\r\n      },\r\n      {\r\n        featureType: \"road\",\r\n        elementType: \"geometry.stroke\",\r\n        stylers: [{ color: \"#F1D485\" }],\r\n      },\r\n      {\r\n        featureType: \"road\",\r\n        elementType: \"labels.text.fill\",\r\n        stylers: [{ color: \"#9ca5b3\" }],\r\n      },\r\n      {\r\n        featureType: \"road.highway\",\r\n        elementType: \"geometry\",\r\n        stylers: [{ color: \"#746855\" }],\r\n      },\r\n      {\r\n        featureType: \"road.highway\",\r\n        elementType: \"geometry.stroke\",\r\n        //Autopista\r\n        stylers: [{ color: \"#F1D485\" }],\r\n      },\r\n      {\r\n        featureType: \"road.highway\",\r\n        elementType: \"labels.text.fill\",\r\n        stylers: [{ color: \"#F1D485\" }],\r\n      },\r\n      {\r\n        featureType: \"transit\",\r\n        elementType: \"geometry\",\r\n        stylers: [{ color: \"#F1D485\" }],\r\n      },\r\n      {\r\n        featureType: \"transit.station\",\r\n        elementType: \"labels.text.fill\",\r\n        stylers: [{ color: \"#d59563\" }],\r\n      },\r\n      //Agua\r\n      {\r\n        featureType: \"water\",\r\n        elementType: \"geometry\",\r\n        stylers: [{ color: \"#B5DDEF\" }],\r\n      },\r\n      {\r\n        featureType: \"water\",\r\n        elementType: \"labels.text.fill\",\r\n        stylers: [{ color: \"#EEF6E8\" }],\r\n      },\r\n      {\r\n        featureType: \"water\",\r\n        elementType: \"labels.text.stroke\",\r\n        stylers: [{ color: \"#EEF6E8\" }],\r\n      },\r\n    ];\r\n\r\n    //var DatosGPS=this.props.DatosGPS;\r\n\r\n    //console.log(\"Datosok:\" + DatosGps);\r\n\r\n    var Latitud = this.props.Latitud;\r\n    var Longitud = this.props.longitude;\r\n    console.log(\"Datosok:\" + Latitud);\r\n    return (\r\n      <>\r\n        {/*  //Coordenadas Mapa} */}\r\n        <MapView\r\n          style={styles.map}\r\n          initialRegion={{\r\n            latitude: Latitud,\r\n            longitude: Longitud,\r\n            latitudeDelta: 0.0922,\r\n            longitudeDelta: 0.0421,\r\n          }}\r\n          customMapStyle={mapStyle}\r\n        >\r\n          <MapView.Marker\r\n            draggable\r\n            coordinate={{\r\n              latitude: Latitud,\r\n              longitude: Longitud,\r\n            }}\r\n            onDragEnd={(e) => alert(JSON.stringify(e.nativeEvent.coordinate))}\r\n            title={\"Yo\"}\r\n            description={\"Tu posici√≥n\"}\r\n          >\r\n            <Text>{\"Yo\"}</Text>\r\n            <Image\r\n              source={require(\"./Usuario.png\")}\r\n              style={{ width: 20, height: 20 }}\r\n            />\r\n          </MapView.Marker>\r\n\r\n          <MapView.Marker\r\n            draggable\r\n            coordinate={{\r\n              latitude: this.state.Latitud,\r\n              longitude: this.state.longitude,\r\n            }}\r\n            onDragEnd={(e) => alert(JSON.stringify(e.nativeEvent.coordinate))}\r\n            title={\"Jaime\"}\r\n            description={\"Numero de jaime\"}\r\n          >\r\n            <Text>{\"Jaime\"}</Text>\r\n            <Image\r\n              source={require(\"./Usuario.png\")}\r\n              style={{ width: 20, height: 20 }}\r\n            />\r\n          </MapView.Marker>\r\n        </MapView>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}